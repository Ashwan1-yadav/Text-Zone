{"version":3,"sources":["components/Navbar.jsx","components/Form.jsx","components/Alert.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","Form","text","setText","useState","Fragment","onChange","event","target","value","rows","style","backgroundColor","color","handlerUp","newText","toUpperCase","handlerlower","toLowerCase","copytoclipboard","navigator","clipboard","writeText","clearText","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","split","length","Alert","alert","App","setmode","setalert","showAlert","setTimeout","aboutText","document","body","heading","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c5590ea8.chunk.js","sourcesContent":["import React from 'react'\n// import { Link } from 'react-router-dom'\n\nconst Navbar = (props) => {\n  return (\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">Text-Zone</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/About\">About</Link>//         \n      //       </Route>\n      //     </Routes>\n      //   </div>\n      // </BrowserRouter>\n        </li> */}\n        \n      </ul>\n      <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form>\n      <div className='m-2'>\n      <div className=\"form-check form-switch\">\n      <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n      <label className={`form-check-label text-${props.mode === \"light\" ? \"dark\" : \"light\"}`} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n      </div>\n      </div>\n    </div>\n  </div>\n</nav>\n  )\n}\n\nexport default Navbar","import React, { useState } from \"react\";\n\nconst Form = (props) => {\n  const [text, setText] = useState(\"\")\n  const handlerUp = () => {\n    setText(\"lorem ipsum\") \n    let newText = text.toUpperCase()\n    setText(newText)\n  }\n\n  const handleonchange= (event) =>{\n    setText(event.target.value)\n  }\n\n  const handlerlower = () => {\n    let newText = text.toLowerCase()\n    setText(newText)\n  }\n\n  const copytoclipboard = () => {\n    navigator.clipboard.writeText(text)\n  }\n\n  const clearText = () => {\n    setText(\"\")\n  }\n\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance();\n    msg.text = text;\n    window.speechSynthesis.speak(msg);\n  }\n\n  return (\n    <>\n    <div className=\"container mt-4\">\n      <div className=\"mb-3\">\n        <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label mt-4\">\n           <h2>Textarea</h2>\n        </label>\n        <textarea onChange={handleonchange}\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          rows=\"8\"\n          value={text}\n          style={{backgroundColor : props.mode === \"light\" ? \"dark\" : \"light\" , color : props.mode === \"light\" ? \"black\" : \"light\"}}\n        ></textarea>\n        <button className=\"btn btn-primary m-2\" onClick={handlerUp}>Convert to Uppercase</button>\n        <button className=\"btn btn-primary m-2\" onClick={handlerlower}>Convert to Lowercase</button>\n        <button onClick={copytoclipboard} className=\"btn btn-success\">Copy Text</button>\n        <button onClick={clearText} className=\"btn btn-danger m-2\">Clear Text</button>\n        <button onClick={speak} className=\"btn btn-warning mx-2 my-2\">Speak</button>\n      </div>\n    </div>\n\n    <div className=\"container\">\n      <p>Word Count : {(text.split(\" \").length)}</p>\n      <p>Character Count : {text.length}</p>\n      <p>Take Time to read : {0.008 * text.split(\" \").length} minutes </p>\n    </div>\n\n    <hr />\n\n    <div className=\"container\">\n      <h2>Text Preview</h2>\n      <div className=\"container\"><hr />\n      <p>{text}</p>\n      <hr />\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst Alert = (props) => {\n  return (\n    props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\">\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\n       </div>\n    )\n  );\n};\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter , Routes, Route} from \"react-router-dom\";\n// import About from \"./components/About\";\n\nconst App = () => {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (msg, type) => {\n    setalert({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#343a40\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <BrowserRouter> */}\n        <Navbar\n          \n          aboutText=\"TextAbouts\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        {/* <div className=\"container my-4\" mode={mode}>\n          <Routes>\n            <Route exact path=\"/about\" element={<About />}></Route>\n            <Route\n              exact path=\"/\"\n              element={ */}\n                <Form\n                  showAlert={showAlert}\n                  heading=\"Enter Text to analyze \"\n                  mode={mode}\n            />\n      {/* //         \n      //       </Route>\n      //     </Routes>\n      //   </div>\n      // </BrowserRouter> */}\n    \n  </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}